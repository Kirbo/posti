image: kirbownz/node12-rsync-python-ssh

###### STAGES #################################################################
stages:
  - install
  - test
  - build
  - publish
  - deploy

###### TEMPLATES ##############################################################
.general: &general
  tags:
    - gitlab-org
  variables:
    GIT_STRATEGY: fetch

variables:
  # Docker in Docker variables
  DOCKER_HOST: "tcp://docker:2375"

###### JOBS ###################################################################
install:
  <<: *general
  stage: install
  artifacts:
    paths:
      - node_modules
    expire_in: 1 day
  script:
    - rm yarn.lock
    - yarn

lint:
  <<: *general
  stage: test
  dependencies:
    - install
  script:
    - yarn lint

mariadb:
  <<: *general
  variables:
    # Configure mysql environment variables (https://hub.docker.com/r/linuxserver/mariadb#parameters)
    MYSQL_DATABASE: POSTI
    MYSQL_USER: POSTI
    MYSQL_PASSWORD: POSTI
  services:
    - docker:stable-dind
    - linuxserver/mariadb
  stage: test
  dependencies:
    - install
  artifacts:
    paths:
      - coverage
    expire_in: 1 month
  script:
    - mkdir ~/.posti
    - cp test/mariadb.config.js ~/.posti/config.js
    - yarn test --ci --coverage

postgres:
  <<: *general
  variables:
    # Configure mysql environment variables (https://hub.docker.com/_/postgres#environment-variables)
    POSTGRES_DB: POSTI
    POSTGRES_USER: POSTI
    POSTGRES_PASSWORD: POSTI
  services:
    - docker:stable-dind
    - postgres:latest
  stage: test
  dependencies:
    - install
  artifacts:
    paths:
      - coverage
    expire_in: 1 month
  script:
    - mkdir ~/.posti
    - cp test/postgresql.config.js ~/.posti/config.js
    - yarn test --ci --coverage

build:
  <<: *general
  variables:
    # Configure mysql environment variables (https://hub.docker.com/r/linuxserver/mariadb#parameters)
    MYSQL_DATABASE: POSTI
    MYSQL_USER: POSTI
    MYSQL_PASSWORD: POSTI
  services:
    - docker:stable-dind
    - linuxserver/mariadb
  stage: build
  dependencies:
    - install
  artifacts:
    paths:
      - dist
    expire_in: 1 day
  script:
    - mkdir ~/.posti
    - cp test/mariadb.config.js ~/.posti/config.js
    - yarn build
    - rm -rf node_modules ; yarn install --production
    - ./dist/posti.js && exit $?

# Run the jobs below only for `release` branch.
publish to npm:
  <<: *general
  stage: publish
  only:
    - release
  dependencies:
    - build
  allow_failure: false
  script:
    - echo "${npmrc}" > ~/.npmrc
    - echo "Publish version $(node -p -e "require('./package.json').version")"
    - npm publish

update pages:
  <<: *general
  stage: deploy
  only:
    - release
  dependencies:
    - mariadb
  script:
    - mkdir -p ~/.ssh
    - echo "${ssh_key}" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - echo "${gitconfig}" > ~/.gitconfig
    - ssh-keyscan -t rsa ${demo_host} >> ~/.ssh/known_hosts
    - rsync coverage ${demo_user}@${demo_host}:${demo_path} --delete-after -r -v

deploy to github:
  <<: *general
  stage: deploy
  only:
    - release
  dependencies: []
  script:
    - mkdir -p ~/.ssh
    - echo "${ssh_key}" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - echo "${ssh_config}" > ~/.ssh/config
    - echo "${gitconfig}" > ~/.gitconfig
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    - if [[ $(git remote | grep github) ]]; then git remote remove github; fi
    - git remote add github git@github.com:kirbo/posti.git
    - export PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
    - git push github HEAD:refs/heads/master
    - git tag -a v${PACKAGE_VERSION} -m "Version ${PACKAGE_VERSION}"
    - git push github v${PACKAGE_VERSION}
